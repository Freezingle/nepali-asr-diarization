import os
import tempfile
import streamlit as st
from datetime import timedelta

# Streamlit UI
st.set_page_config(page_title="Nepali Voice Transcript Tool (Demo)", layout="centered")
st.markdown("# ЁЯОЩ Nepali ASR + Diarization")
st.markdown("Upload your Nepali MP3 audio file. We'll show a dmmy conversation between Nepali speakers.")

uploaded_file = st.file_uploader("ЁЯУд Upload a Nepali MP3 file", type=["mp3"])

def display_dummy_chat():
    dummy_results = [
        ("Speaker 1", 0, 5, "рдирдорд╕реНрддреЗ! рддрдкрд╛рдИрдВрд▓рд╛рдИ рдХрд╕реНрддреЛ рдЫ?"),
        ("Speaker 2", 5, 10, "рдо рдард┐рдХ рдЫреБ, рдзрдиреНрдпрд╡рд╛рджред рддрдкрд╛рдИрдВрд▓рд╛рдИ рдХрд╕реНрддреЛ рдЫ?"),
        ("Speaker 1", 10, 15, "рдо рдкрдирд┐ рд░рд╛рдореНрд░реЛ рдЫреБред рдЖрдЬрдХреЛ рдореМрд╕рдо рдХрд╕реНрддреЛ рдЫ?"),
        ("Speaker 2", 15, 20, "рдЖрдЬ рдореМрд╕рдо рдзреЗрд░реИ рд░рд╛рдореНрд░реЛ рдЫ, рдШреБрдореНрди рдЬрд╛рди рд░рд╛рдореНрд░реЛ рджрд┐рди рдЫред"),
    ]
    st.markdown("### ЁЯТм Conversation Transcript")
    for speaker, start, end, text in dummy_results:
        time_range = f"[{str(timedelta(seconds=int(start)))} - {str(timedelta(seconds=int(end)))}]"
        st.markdown(f"**ЁЯЧг {speaker} {time_range}**\n\n{text}  \n")

if uploaded_file:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp:
        tmp.write(uploaded_file.read())
        tmp_path = tmp.name

    st.audio(tmp_path, format="audio/mp3")
    st.info("ЁЯФК Audio uploaded successfully!")
    
    # Instead of processing, just show dummy transcript
    display_dummy_chat()
else:
    st.info("Please upload a Nepali MP3 file to see the dummy transcript.")
